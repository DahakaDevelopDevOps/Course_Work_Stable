<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>Видео курса и тесты</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            color: #343a40;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
            background-color: #ffffff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        h1 {
            text-align: center;
            color: #007bff;
        }

        .hidden {
            display: none;
        }

        .video video {
            width: 100%;
            border-radius: 8px;
        }

        .task {
            margin-bottom: 30px;
            padding: 15px;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            background-color: #f1f1f1;
        }

        .correct {
            background-color: #d4edda;
        }

        .incorrect {
            background-color: #f8d7da;
        }

        button {
            display: block;
            width: 100%;
            margin-top: 20px;
            padding: 10px;
            font-size: 16px;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3;
        }

        #finishButton {
            background-color: #28a745;
        }

        #finishButton:hover {
            background-color: #218838;
        }

        #retryButton {
            background-color: #ffc107;
        }

        #retryButton:hover {
            background-color: #e0a800;
        }

        .result-message {
            text-align: center;
            font-size: 18px;
            margin-top: 20px;
        }

        button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="materials-container" id="materials">
            <h1>Материалы курса</h1>
            {{#each materials}}
            <div class="material-item">
                <div class="material-title">{{this.title}}</div>
                <div class="material-text">{{this.text}}</div>
            </div>
            {{/each}}
        </div>

        <div class="video-container" id="videos">
            <h1>Видео курса</h1>
            {{#each videous}}
            <div class="video">
                <video controls>
                    <source src="{{this.video_url}}" type="video/mp4">
                    Ваш браузер не поддерживает видео.
                </video>
            </div>
            {{/each}}
        </div>

        <button id="startTestButton">Перейти к тестам</button>

        <div id="testSection" class="hidden">
            <h1>Тесты для курса</h1>
            <h1>Процент правильных ответов для прохождения = {{pass_threshold}}%</h1>
            <form id="testForm">
                <div id="tasksContainer">
                    {{#each tasks}}
                    {{#if (lt @index ../questions_to_show)}}
                    <div class="task" data-test-id="{{this.test_id}}">
                        <h2>{{this.question_text}}</h2>
                        <ul>
                            {{#each this.answers}}
                            <li>
                                <label>
                                    <input type="checkbox" name="answer{{../test_id}}" value="{{this.answer_id}}"
                                        data-is-correct="{{this.is_correct}}"> {{this.answer_text}}
                                </label>
                            </li>
                            {{/each}}
                        </ul>
                    </div>
                    {{/if}}
                    {{/each}}
                </div>
                <button type="submit" id="submitButton">Отправить ответы</button>
                <button type="button" id="retryButton" class="hidden">Попробовать снова</button>
                <button type="button" id="finishButton" class="hidden">Завершить</button>
            </form>
            <div id="resultMessage" class="result-message"></div>
        </div>
    </div>

    <script>
        let correctCount = 0;
        let totalQuestions;
        let retryAttempted = false; // Флаг для отслеживания попытки перепройти тест

        document.addEventListener('DOMContentLoaded', function () {
            function shuffleArray(array) {
                for (let i = array.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    [array[i], array[j]] = [array[j], array[i]];
                }
                return array;
            }

            function shuffleAnswers(task) {
                const answersList = task.querySelector('ul');
                const answers = Array.from(answersList.children);
                const shuffledAnswers = shuffleArray(answers);
                answersList.innerHTML = '';
                shuffledAnswers.forEach(answer => answersList.appendChild(answer));
            }

            const tasksContainer = document.getElementById('tasksContainer');
            const tasks = Array.from(tasksContainer.children);
            const shuffledTasks = shuffleArray(tasks);

            tasksContainer.innerHTML = '';
            shuffledTasks.forEach(task => {
                shuffleAnswers(task);
                tasksContainer.appendChild(task);
            });

            const testForm = document.getElementById('testForm');
            const finishButton = document.getElementById('finishButton');
            const retryButton = document.getElementById('retryButton');
            const submitButton = document.getElementById('submitButton');
            const startTestButton = document.getElementById('startTestButton');
            const materials = document.getElementById('materials');
            const videos = document.getElementById('videos');
            const testSection = document.getElementById('testSection');
            const resultMessage = document.getElementById('resultMessage');

            const passThreshold = {{ pass_threshold }}; // Порог прохождения курса

            startTestButton.addEventListener('click', function () {
                materials.classList.add('hidden');
                videos.classList.add('hidden');
                startTestButton.classList.add('hidden');
                testSection.classList.remove('hidden');
            });

            testForm.addEventListener('submit', function (event) {
                event.preventDefault();
                totalQuestions = tasks.length;

                document.querySelectorAll('.task').forEach(task => {
                    const selectedAnswers = task.querySelectorAll('input[type="checkbox"]:checked');
                    const correctAnswers = task.querySelectorAll('input[type="checkbox"][data-is-correct="true"]');
                    const selectedCorrectAnswers = Array.from(selectedAnswers).filter(answer => answer.dataset.isCorrect === 'true');

                    if (selectedAnswers.length === correctAnswers.length && selectedCorrectAnswers.length === correctAnswers.length) {
                        task.classList.add('correct');
                        task.classList.remove('incorrect');
                        correctCount++;
                    } else {
                        task.classList.add('incorrect');
                        task.classList.remove('correct');
                    }
                });

                const percentage = (correctCount / totalQuestions) * 100;
                resultMessage.textContent = `Вы ответили правильно на ${percentage.toFixed(2)}% вопросов.`;

                if (percentage >= passThreshold) {
                    finishButton.classList.remove('hidden');
                    submitButton.disabled = true; // Блокируем кнопку "Отправить ответы"
                    if (percentage === 100) {
                        resultMessage.textContent += ' Вы прошли курс на 100%!';
                    } else {
                        resultMessage.textContent += ' Вы прошли курс!';
                    }
                } else {
                    if (!retryAttempted) {
                        retryButton.classList.remove('hidden');
                        submitButton.disabled = true; // Блокируем кнопку "Отправить ответы"
                        resultMessage.textContent += ' Попробуйте снова.';
                    } else {
                        finishButton.classList.remove('hidden');
                        submitButton.disabled = true; // Блокируем кнопку "Отправить ответы"
                        resultMessage.textContent += ' Вы использовали все попытки. Курс завершен.';
                    }
                }
            });

            retryButton.addEventListener('click', function () {
                retryAttempted = true; // Отмечаем, что попытка использована
                document.querySelectorAll('.task').forEach(task => {
                    task.classList.remove('correct', 'incorrect');
                    task.querySelectorAll('input[type="checkbox"]').forEach(input => {
                        input.checked = false;
                    });
                });
                retryButton.classList.add('hidden');
                submitButton.disabled = false; // Включаем кнопку "Отправить ответы"
                resultMessage.textContent = '';
                correctCount = 0; // Сбрасываем счетчик правильных ответов
            });

            finishButton.addEventListener('click', async function () {
                try {
                    alert('Отлично, курс завершен!');
                    let percentage = (correctCount / totalQuestions) * 100;
                    let statusId = percentage >= passThreshold ? 3 : 2; // 3 - passed, 2 - failed
                    let courseStatus = percentage >= passThreshold ? 1 : 0; // 1 - available, 0 - locked

                    const response = await fetch(`/profile/updateStatus/{{courseId}}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            status_id: statusId,
                            course_status: courseStatus,
                            percent_success: percentage
                        })
                    });

                    if (!response.ok) {
                        throw new Error('Ошибка при обновлении статуса курса');
                    }
                    window.location.href = "/profile";
                } catch (error) {
                    console.error('Ошибка:', error);
                    alert('Произошла ошибка, попробуйте снова.');
                }
            });
        });
    </script>
</body>

</html>